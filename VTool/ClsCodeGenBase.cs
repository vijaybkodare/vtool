using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.IO;

namespace VTool
{
    public class ClsCodeGenBase
    {
        #region Variables
        protected DataTable dt;
        protected StringBuilder strBuilder;
        protected string tab1 = "\t";
        protected string tab2 = "\t\t";
        protected string tab3 = "\t\t\t";
        protected string tab4 = "\t\t\t\t";
        #endregion

        #region Functions
        protected void InitCodeGenerator(string tableName)
        {
            strBuilder = new StringBuilder();
            dt = DBHandler.GetTableWithSchema(tableName);
        }
        protected void WriteImportsStatement()
        {
            WriteMyComment(); 
            strBuilder.AppendLine("using System;");
            strBuilder.AppendLine("using System.Collections.Generic;");
            strBuilder.AppendLine("using System.ComponentModel;");
            strBuilder.AppendLine("using System.Data;");
            strBuilder.AppendLine("using System.Drawing;");
            strBuilder.AppendLine("using System.Text;");
            strBuilder.AppendLine("using System.Windows.Forms;");
            strBuilder.AppendLine("using NV.ERP..ENT;");
            strBuilder.AppendLine("using NV.ERP.CommonCCL;");
        }
        protected void WriteMyComment()
        {
            strBuilder.AppendLine("//Code is auto generated by VTool");
        }
        protected void WriteCodeInFile(string folderName, string preName, string postName, string extension)
        {
            string fileName = System.Configuration.ConfigurationSettings.AppSettings["OutPutFilePath"].ToString();
            fileName += "\\" + folderName + "\\" + preName + dt.TableName + postName + extension;    
            File.WriteAllText(fileName, strBuilder.ToString());
        }
        protected void WriteEndRegion()
        {
            strBuilder.AppendLine("#endregion");
        }
        protected void WriteBlankLine()
        {
            strBuilder.AppendLine("");
        }
        protected void WriteRegion(string regionDesc)
        {
            WriteBlankLine();
            strBuilder.AppendLine("#region " + regionDesc);
        }
        protected void WriteOpeningBrace()
        {
            strBuilder.AppendLine("{");
        }
        protected void WriteClosingBrace()
        {
            strBuilder.AppendLine("}");
        }
        protected void WriteNamespace()
        {
            strBuilder.AppendLine("namespace " + AppSetting.namespaceName);
            WriteOpeningBrace();
        }
        protected void WriteClassDefinition(string className, string inheritedFrom)
        {
            if(inheritedFrom == "")
                strBuilder.AppendLine(tab1 + "partial class " +
                AppSetting.preUIName + dt.TableName + AppSetting.postUIName);
            else
                strBuilder.AppendLine(tab1 + "partial class " +
                AppSetting.preUIName + dt.TableName + AppSetting.postUIName + " : Form");
            WriteOpeningBrace();
        }
        protected void WriteFunctionDefination(string accessModifier, string funcName, string retType)
        {
            strBuilder.AppendLine(tab2 + accessModifier + " " + retType + " " + funcName + "()");
            strBuilder.AppendLine(tab2 + "{");
        }
        protected void WriteConstrFunction(string accessModifier, string className)
        {
            strBuilder.AppendLine(tab2 + accessModifier + " " + className + "()");
            strBuilder.AppendLine(tab2 + "{");
        }
        #endregion
    }
}
